// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("AGENT")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  agent     Agent?
  
  @@map("users")
}

model Agent {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?  @unique
  tasks     Task[]   @relation("AssignedTasks")
  collab    Task[]   @relation("CollaboratedTasks")
  logs      Log[]
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @unique
  
  @@map("agents")
}

model Task {
  id          Int      @id @default(autoincrement())
  expediente  String   @unique
  description String
  status      Status   @default(PENDIENTE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  assignedTo  Agent?   @relation("AssignedTasks", fields: [agentId], references: [id])
  agentId     Int?

  collaborator Agent?  @relation("CollaboratedTasks", fields: [collabId], references: [id])
  collabId     Int?

  logs        Log[]
  inventoryId Int?
  inventory   Inventory? @relation(fields: [inventoryId], references: [id])
}

model Log {
  id        Int      @id @default(autoincrement())
  message   String
  createdAt DateTime @default(now())
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  agent     Agent?   @relation(fields: [agentId], references: [id])
  agentId   Int?
}

model Inventory {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  type      String
  tasks     Task[]
}

enum Status {
  PENDIENTE
  EN_PROCESO
  EN_ESPERA
  COMPLETADO
} 